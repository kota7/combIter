// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// NextComb
std::vector<int> NextComb(std::vector<int> x, int n);
RcppExport SEXP combiter_NextComb(SEXP xSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<int> >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(NextComb(x, n));
    return rcpp_result_gen;
END_RCPP
}
// PrevComb
std::vector<int> PrevComb(std::vector<int> x, int n);
RcppExport SEXP combiter_PrevComb(SEXP xSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<int> >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(PrevComb(x, n));
    return rcpp_result_gen;
END_RCPP
}
// NextPerm
std::vector<int> NextPerm(std::vector<int> x);
RcppExport SEXP combiter_NextPerm(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<int> >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(NextPerm(x));
    return rcpp_result_gen;
END_RCPP
}
// PrevPerm
std::vector<int> PrevPerm(std::vector<int> x);
RcppExport SEXP combiter_PrevPerm(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<int> >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(PrevPerm(x));
    return rcpp_result_gen;
END_RCPP
}
// NextSubset
std::vector<int> NextSubset(std::vector<int> x, int n);
RcppExport SEXP combiter_NextSubset(SEXP xSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<int> >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(NextSubset(x, n));
    return rcpp_result_gen;
END_RCPP
}
// PrevSubset
std::vector<int> PrevSubset(std::vector<int> x, int n);
RcppExport SEXP combiter_PrevSubset(SEXP xSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<int> >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(PrevSubset(x, n));
    return rcpp_result_gen;
END_RCPP
}
